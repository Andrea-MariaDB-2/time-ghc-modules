#!/usr/bin/env bash
set -euo pipefail

TSV="$1"
FAILURES="$2"
DUMP_TIMINGS="$3"

PATTERN='\(.*\) \[\(.*\)\]:.*alloc=\([0-9]*\).*time=\([0-9\.]*\).*'
REPLACE='todo-package\t\2\t\1\t\3\t\4'

# sed -n "$REGEX" "$DUMP_TIMINGS" >> "$TSV"

TMP_FAILURES=$(mktemp)

sed -n "/$PATTERN/p; //! w $TMP_FAILURES" "$DUMP_TIMINGS" > "$TSV"

cat "$TMP_FAILURES" >> "$FAILURES"
rm "$TMP_FAILURES"

# sed -n "$NON_MATCH_REGEX" "$DUMP_TIMINGS" >> "$FAILURES"

# while read line; do
#   # echo "Saw line: $line"
#   module=$(echo "$line" | sed -n 's/.*\[\(.*\)\]:.*/\1/p')
#   alloc=$(echo "$line" | sed -n 's/.*alloc=\([0-9]*\).*/\1/p')
#   time=$(echo "$line" | sed -n 's/.*time=\([0-9\.]*\).*/\1/p')

#   if [[ -n "$module" && -n "$alloc" && -n "$time" ]]; then
#       echo "unknown\t$module\tunknown\t$alloc\t$time" >> "$TSV"
#   else
#       # TODO: write parse failure
#       echo "Parse failure: $line"
#   fi
# done < "$DUMP_TIMINGS"
